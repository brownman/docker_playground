#!/bin/bash
set -u
clear



set_env(){
############################################ 2 base containers
CONTAINER_APP='brownman/onbuild' 
CONTAINER_DB='brownman/mongo'         
#CONTAINER_DB='dockerfile/mongodb'

############################################ aliases
alias_mongo='mongo_deamon'
############################################ docker flags
flag_docker_interactive='-i -t --rm'
flag_docker_deamon='-d -t'

############################################ volumes
volume_extra='-v /extra:/extra'
volume_data='-v /data:/data'
########################################### gitlab params
opts_gitlab="-e HOME=/home/gitlab_ci_runner     -e CI_SERVER_URL=$CI_SERVER_URL     -e REGISTRATION_TOKEN=$REGISTRATION_TOKEN     -e GITLAB_SERVER_FQDN=git.mean.io"

########################################### mongo conf
flag_ports='-p 27017:27017 -p 28017:28017'
flag_mongo="--rest --httpinterface --smallfiles"
##########################################  validate
cmd_validate_mongo_netstat='sudo netstat -ntlp | grep mongo'
cmd_validate_mongo_env='env | grep db'
#cmd_validate_mongo_localhost=${1:-$cmd_netstat}
cmd_validate_mongo_container_up="sudo docker ps | grep $alias_mongo"
######################################### FINALLY
cmd_app="docker run --link $alias_mongo:db $volume_extra $flag_docker $opts_gitlab $CONTAINER_APP bash -c '$cmd_validate_env_mongo'"
cmd_mongo="docker run $volume_data $flag_ports -d --name $alias_mongo $CONTAINER_DB mongod $flag_mongo"
}
#cmd_app="sudo docker run -v /data:/data --name $alias_mongo -d $CONTAINER_DB $cmd_mongo"
container_mongo(){
echo validating existance of local dir: /data/db
( test -d /data/db ) || ( sudo mkdir -p /data/db )
#ensure mongo container is running
( commander "$cmd_validate_running_container" ) || ( commander "$cmd_mongo" )
commander "$validate_mongo_container_up" || { trace "[ERROR] failed launching mongo contirunning container"; }
}

container_app(){

commander "$cmd_app"
}
}
ensure1(){
docker ps 
}
steps(){
set_env
container_mongo
container_app
ensure1
}


steps

