######################################### RUN / LINK  -2-  CONTAINERS
#docker run --link mongo_deamon:db -v /extra:/extra -i -t -e HOME=/home/gitlab_ci_runner -e CI_SERVER_URL=http://ci0.mean.io -e REGISTRATION_TOKEN=71f4b1fe380484bc57ad -e GITLAB_SERVER_FQDN=git.mean.io brownman/onbuild bash -c i
run_sel(){
$dir_root/TMP/link.sh
}

run_webapp(){
  local cmd_start="${1:-'env'}"
  local flag_docker="${2:-'-i'}"
local alias_selenium=$( $dir_root/DETECT/selenium_alias.sh )
  commander "docker run --link $alias_selenium:selenium $volume_extra  $opts_gitlab $flag_docker -t $CONTAINER_APP bash -c '$cmd_start'"
}


run_webapp_old(){
  local cmd_start="${1:-'env'}"
  local flag_docker="${2:-'-i'}"
  commander "docker run --link $alias_mongo:db $volume_extra  $opts_gitlab $flag_docker -t $CONTAINER_APP bash -c '$cmd_start'"
}


run_webapp_deamon(){
  set -u
  local cmd='. ~/.profile && $HOME/runner/bin/setup_and_run'
  local	flag_docker='-d'
  run_webapp "$cmd" "$flag_docker"
}

run_webapp_interactive(){
  set -u
  local cmd='bash'
  local	flag_docker='-i --rm'
  run_webapp "$cmd" "$flag_docker"
}

run_mongo(){
#use ensure
 commander "docker run $volume_data $flag_ports -d --name $alias_mongo $CONTAINER_DB sh -c 'mongod $flag_mongo'"; 
}

run_mongo_wrapper(){
( ensure mongo_container_alive ) || { commander_exit run_mongo; }
ensure mongo_container_alive
}

export -f run_webapp
export -f run_mongo
export -f run_mongo_wrapper
export -f run_webapp_interactive
export -f run_webapp_deamon
