######################################### RUN / LINK  -2-  CONTAINERS
#docker run --link mongo_deamon:db -v /extra:/extra -i -t -e HOME=/home/gitlab_ci_runner -e CI_SERVER_URL=http://ci0.mean.io -e REGISTRATION_TOKEN=71f4b1fe380484bc57ad -e GITLAB_SERVER_FQDN=git.mean.io brownman/onbuild bash -c i
detect_running(){
local exp=${1:-sel};
local str=$( docker ps | awk '{print $11}' | grep $exp | cut -d',' -f1 )
echo $str
}

run_selenium(){
#commander $dir_root/TMP/link.sh
#docker pull vvoyer/docker-selenium-firefox-chrome  

local cmd_env="-e SCREEN='Record VNC'"
commander test -v alias_selenium
commander test -n "$alias_selenium"
#commander docker run $volume_tmp $volume_build --privileged -p 5999:5999 -p 4444:4444 -d --name $alias_selenium $CONTAINER_SEL2
commander docker run --privileged $cmd_env $volume_build $volume_tmp -p 4444:4444 -p 5999:5999 -d --name $alias_selenium lewisw/selenium


#docker pull vvoyer/docker-selenium-firefox-chrome
#docker run --privileged -p 4444:4444 -p 5999:5999 -d vvoyer/docker-selenium-firefox-chrome 

#docker run --privileged -p 4444:4444 -p 5999:5999 -d vvoyer/docker-selenium-firefox-chrome  

#docker run --privileged -p 4444:4444 -d --name selenium$(date +%s) eperoumalnaik/docker-chrome-selenium && { docker ps; }

}

run_tests(){
local file_test="${1:-$dir_root/tests/tests.sh}"
local flag_docker=${2:-'-i'}
local exp='sel'
local alias_selenium="$alias_selenium"
#$( detect_running "$exp" )

test -v alias_selenium || { trace "[err] can not detect alias which match $exp"; exit 0; }

commander test -n "$alias_selenium"
local container=$CONTAINER_APP
#  commander "docker run --link $alias_selenium:selenium $volume_extra  $opts_gitlab $flag_docker -t $CONTAINER_APP bash -c '$cmd_start'"
#local port=4444
#local port_vlc=5999
#local cmd_ports="-p $port:$port -p $port_vlc:$port_vlc"
#local name_const=selenium
local cmd_link="--link $alias_selenium:$name_const"
local cmd_volume="$volume_extra"
commander "docker run $volume_tmp2 $cmd_volume $cmd_link $flag_docker $container bash < $file_test"
}

run_webapp(){
  local cmd_start="${1:-'env'}"
  local flag_docker="${2:-'-i'}"
  test -v alias_selenium
  test -v alias_mongo
  #( detect_running )
  #commander "docker run --link $alias_mongo:db --link $alias_selenium:selenium $volume_tmp2 $volume_extra  $opts_gitlab $flag_docker -t $CONTAINER_APP bash -c '$cmd_start'" #with mongo
 commander "docker run  --link $alias_selenium:selenium $volume_tmp2 $volume_extra  $opts_gitlab $flag_docker -t $CONTAINER_APP bash -c '$cmd_start'"
}


run_webapp_old(){
  local cmd_start="${1:-'env'}"
  local flag_docker="${2:-'-i'}"
  commander "docker run --link $alias_mongo:db $volume_extra  $opts_gitlab $flag_docker -t $CONTAINER_APP bash -c '$cmd_start'"
}


run_webapp_deamon(){
  set -u
  local cmd='. ~/.profile && $HOME/runner/bin/setup_and_run'
  local	flag_docker='-d'
  run_webapp "$cmd" "$flag_docker"
}

run_webapp_interactive(){
  set -u
  local cmd='bash'
  local	flag_docker='-i --rm'
  run_webapp "$cmd" "$flag_docker"
}

run_mongo(){
#use ensure
    test -d /data/db || { mkdir -p /data/db; }
 commander "docker run $volume_data $flag_ports_mongo -d --name $alias_mongo $CONTAINER_DB sh -c 'mongod $flag_mongo'"; 
}

run_mongo_wrapper(){
( ensure mongo_container_alive ) || { commander_exit run_mongo; }
ensure mongo_container_alive
}

export -f run_webapp
export -f run_mongo
export -f run_mongo_wrapper
export -f run_webapp_interactive
export -f run_webapp_deamon
export -f run_selenium
